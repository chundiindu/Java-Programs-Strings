Given a array of N strings, find the longest common prefix among all strings present in the array.

class Solution{
    String longestCommonPrefix(String arr[], int n){
       String prefix=arr[0];
        for(int i=1;i<=n-1;i++)
        {
            prefix=commonPrefixUntil(prefix,arr[i]);
        }
        return prefix;
        
        
    }
    static String commonPrefixUntil(String str1,String str2)
    {
        String result = "";
        int n1=str1.length(); 
        int n2=str2.length();
        for(int i=0,j=0;i<=n1-1&&j<=n2-1;i++,j++)
        {
            if(str1.charAt(i)!=str2.charAt(i))
            {
                break;
            }
            result+=str1.charAt(i);
        }
        if(result.length()==0)
        {
            return "-1";
        }
        return result;
    }
}



class Solution{
    String longestCommonPrefix(String arr[], int n){
        int minlen = findMinLength(arr,n);
        String result="";
        char current;
       
        for(int i=0;i<minlen;i++)
        {
            
            current=arr[0].charAt(i);
            for(int j=1;j<n;j++)
            {
                if(arr[j].charAt(i)!=current)
                {
                     if(result.length()==0)
                    {
           
                      return "-1";
                      }
                    return result;
                }
    
            }
            result+=current;
         
        }
        if(result.length()==0)
        {
           
            return "-1";
        }
        
        return result;
        
    }

    static int findMinLength(String arr[], int n)
    {
        int min = arr[0].length();
        for(int i=1;i<n;i++)
        {
            if(arr[i].length()<min)
            {
                min=arr[i].length();
            }
        }
        return min;
     
}
}

